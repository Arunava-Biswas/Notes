GitHub is a code hosting platform for version control and collaboration. It lets you and others work together on projects from anywhere.

Git is a version control system that allows a user to keep track of changes made to a code, whereas GitHub is a Cloud service that stores all the different versions of code in repositories.

- Creating a Repository:
A repository is usually used to organize a single project. Repositories can contain folders and files, images, videos, spreadsheets, and data sets -- anything your project needs. Often, repositories include a README file, a file with information about your project. README files are written in the plain text Markdown language.

1. In the upper-right corner of any page, use the drop-down menu, and select New repository. 
2. In the Repository name box, enter Repository_name.
3. In the Description box, write a short description.
4. Select Add a README file.
5. Select whether your repository will be Public or Private.
6. Click Create repository.


- Creating a Branch:
Branching lets you have different versions of a repository at one time.
By default, your repository has one branch named main that is considered to be the definitive branch. You can create additional branches off of main in your repository. You can use branches to have different versions of a project at one time. This is helpful when you want to add new features to a project without changing the main source of code.

	Create a branch:
	1. Click the Code tab of your Repository_name repository.
	2. Click the drop down at the top of the file list that says main. 
	3. Type a branch name, readme-edits, into the text box.
	4. Click Create branch: readme-edits from main.

Now you have two branches, main and readme-edits. Right now, they look exactly the same. Next you'll add changes to the new branch.


- Making and committing changes:
When you created a new branch in the previous step, GitHub brought you to the code page for your new readme-edits branch, which is a copy of main.
You can make and save changes to the files in your repository. On GitHub, saved changes are called commits. Each commit has an associated commit message, which is a description explaining why a particular change was made. Commit messages capture the history of your changes so that other contributors can understand what youâ€™ve done and why.

1. Under the readme-edits branch you created, click the README.md file.
2. Click the 'pen sign' to edit the file.
3. In the editor, write a bit about yourself. Try using different Markdown elements.
4. In the Commit changes box, write a commit message that describes your changes.
5. Click Commit changes.

These changes will be made only to the README file on your readme-edits branch, so now this branch contains content that's different from main.


- Opening a pull request:
Pull requests are the heart of collaboration on GitHub. When you open a pull request, you're proposing your changes and requesting that someone review and pull in your contribution and merge them into their branch. Pull requests show diffs, or differences, of the content from both branches. The changes, additions, and subtractions are shown in different colors.
By using GitHub's @mention feature in your pull request message, you can ask for feedback from specific people or teams, whether they're down the hall or 10 time zones away.

1. Click the Pull requests tab of your Repository_name repository.
2. Click New pull request
3. In the Example Comparisons box, select the branch you made, readme-edits, to compare with main (the original).
4. Look over your changes in the diffs on the Compare page, make sure they're what you want to submit.
5. Click Create pull request.
6. Give your pull request a title and write a brief description of your changes. You can include emojis and drag and drop images and gifs.
7. Optionally, to the right of your title and description, click the 'gear sign' next to Reviewers. Assignees, Labels, Projects, or Milestone to add any of these options to your pull request. You do not need to add any yet, but these options offer different ways to collaborate using pull requests. 
8. Click Create pull request.


- Merging your pull request:
In this final step, you will merge your readme-edits branch into the main branch. After you merge your pull request, the changes on your readme-edits branch will be incorporated into main.

1. Click Merge pull request to merge the changes into main. 
2. Click Confirm merge. You will receive a message that the request was successfully merged and the request was closed.
3. Click Delete branch. Now that your pull request is merged and your changes are on main, you can safely delete the readme-edits branch. If you want to make more changes to your project, you can always create a new branch and repeat this process.


--- Git Life Cycle:

Working Directory --> The place where we write the code in the local machine.
	|
	|
Initialization --> The step where we tell Git that recognise this Working Directory as the local repository.
	|
	|
Staging --> It is a process where we tell Git to keep track of certain files along with the changes made.
	|
	|
Commiting --> It is where the file gets saved.
	|
	|
GitHub --> Pushing the code to the remote repository from the local repository.

